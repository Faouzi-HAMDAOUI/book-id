{"version":3,"sources":["webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/components/VRating/VRating.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts"],"names":["baseMixins","name","directives","ClickOutside","props","dark","disabled","fullscreen","light","maxWidth","type","String","default","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","data","activatedBy","animate","animateTimeout","isActive","this","stackMinZIndex","previousActiveElement","computed","classes","contentClasses","hasActivator","Boolean","$slots","$scopedSlots","watch","created","$attrs","hasOwnProperty","beforeMount","beforeDestroy","window","unbind","methods","animateClick","closeConditional","target","e","_isDestroyed","$refs","content","contains","overlay","$el","activeZIndex","hideScroll","document","show","bind","onClickOutside","onKeydown","getOpenDependents","activator","onFocusin","getOpenDependentElements","some","el","focusable","querySelectorAll","genContent","showLazyContent","root","class","attrs","role","tabindex","on","keydown","style","zIndex","ref","genTransition","$createElement","appear","genInnerContent","value","handler","include","transformOrigin","undefined","render","h","staticClass","attach","backgroundColor","color","clearable","dense","emptyIcon","fullIcon","halfIcon","halfIncrements","hover","length","Number","readonly","size","iconLabel","hoverIndex","internalValue","circle","iconProps","xSmall","large","medium","small","xLarge","isHovering","val","$emit","createClickFn","newValue","createProps","index","click","isFilled","Math","isHovered","i","genHoverIndex","isHalf","isHalfEvent","$vuetify","getIconName","isFull","getColor","rect","onMouseEnter","onMouseLeave","genItem","item","listeners","setTextColor","lang","t","children","defaultMenuProps","offsetY","offsetOverflow","VSelect","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","lazySearch","selectedIndex","computedItems","selectedValues","selectedItems","map","hasDisplayedItems","hideSelected","filteredItems","currentRange","selectedItem","getText","internalSearch","allItems","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","listData","items","isFocused","input","isMenuActive","oldVal","activateMenu","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","VTextField","mergeData","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","onInput","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event","delimiters","returnObject","editingIndex","computedCounterValue","delimiter","d","genChipSelection","chip","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","setValue","updateEditing","updateCombobox","isUsingSlot","updateTags","menuIndex","onPaste","pastedItemText","findExistingIndex","ripple","genRipple","center","functional","id","tag","Object","key","fluid","Array"],"mappings":"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","file":"js/chunk-00383f2a.f636dc44.js","sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          this.previousActiveElement = document.activeElement as HTMLElement\n          this.$refs.content.focus()\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","// Styles\nimport './VRating.sass'\n\n// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Sizeable from '../../mixins/sizeable'\nimport Rippleable from '../../mixins/rippleable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { createRange } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, VNodeDirective, VNodeChildren } from 'vue'\n\ntype ItemSlotProps = {\n  index: number\n  value: number\n  isFilled: boolean\n  isHalfFilled?: boolean | undefined\n  isHovered: boolean\n  isHalfHovered?: boolean | undefined\n  click: Function\n}\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Delayable,\n  Rippleable,\n  Sizeable,\n  Themeable\n).extend({\n  name: 'v-rating',\n\n  props: {\n    backgroundColor: {\n      type: String,\n      default: 'accent',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    clearable: Boolean,\n    dense: Boolean,\n    emptyIcon: {\n      type: String,\n      default: '$ratingEmpty',\n    },\n    fullIcon: {\n      type: String,\n      default: '$ratingFull',\n    },\n    halfIcon: {\n      type: String,\n      default: '$ratingHalf',\n    },\n    halfIncrements: Boolean,\n    hover: Boolean,\n    length: {\n      type: [Number, String],\n      default: 5,\n    },\n    readonly: Boolean,\n    size: [Number, String],\n    value: {\n      type: Number,\n      default: 0,\n    },\n    iconLabel: {\n      type: String,\n      default: '$vuetify.rating.ariaLabel.icon',\n    },\n  },\n\n  data () {\n    return {\n      hoverIndex: -1,\n      internalValue: this.value,\n    }\n  },\n\n  computed: {\n    directives (): VNodeDirective[] {\n      if (this.readonly || !this.ripple) return []\n\n      return [{\n        name: 'ripple',\n        value: { circle: true },\n      } as VNodeDirective]\n    },\n    iconProps (): object {\n      const {\n        dark,\n        large,\n        light,\n        medium,\n        small,\n        size,\n        xLarge,\n        xSmall,\n      } = this.$props\n\n      return {\n        dark,\n        large,\n        light,\n        medium,\n        size,\n        small,\n        xLarge,\n        xSmall,\n      }\n    },\n    isHovering (): boolean {\n      return this.hover && this.hoverIndex >= 0\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      val !== this.value && this.$emit('input', val)\n    },\n    value (val) {\n      this.internalValue = val\n    },\n  },\n\n  methods: {\n    createClickFn (i: number): Function {\n      return (e: MouseEvent) => {\n        if (this.readonly) return\n\n        const newValue = this.genHoverIndex(e, i)\n        if (this.clearable && this.internalValue === newValue) {\n          this.internalValue = 0\n        } else {\n          this.internalValue = newValue\n        }\n      }\n    },\n    createProps (i: number): ItemSlotProps {\n      const props: ItemSlotProps = {\n        index: i,\n        value: this.internalValue,\n        click: this.createClickFn(i),\n        isFilled: Math.floor(this.internalValue) > i,\n        isHovered: Math.floor(this.hoverIndex) > i,\n      }\n\n      if (this.halfIncrements) {\n        props.isHalfHovered = !props.isHovered && (this.hoverIndex - i) % 1 > 0\n        props.isHalfFilled = !props.isFilled && (this.internalValue - i) % 1 > 0\n      }\n\n      return props\n    },\n    genHoverIndex (e: MouseEvent, i: number) {\n      let isHalf = this.isHalfEvent(e)\n\n      if (\n        this.halfIncrements &&\n        this.$vuetify.rtl\n      ) {\n        isHalf = !isHalf\n      }\n\n      return i + (isHalf ? 0.5 : 1)\n    },\n    getIconName (props: ItemSlotProps): string {\n      const isFull = this.isHovering ? props.isHovered : props.isFilled\n      const isHalf = this.isHovering ? props.isHalfHovered : props.isHalfFilled\n\n      return isFull ? this.fullIcon : isHalf ? this.halfIcon : this.emptyIcon\n    },\n    getColor (props: ItemSlotProps): string {\n      if (this.isHovering) {\n        if (props.isHovered || props.isHalfHovered) return this.color\n      } else {\n        if (props.isFilled || props.isHalfFilled) return this.color\n      }\n\n      return this.backgroundColor\n    },\n    isHalfEvent (e: MouseEvent): boolean {\n      if (this.halfIncrements) {\n        const rect = e.target && (e.target as HTMLElement).getBoundingClientRect()\n        if (rect && (e.pageX - rect.left) < rect.width / 2) return true\n      }\n\n      return false\n    },\n    onMouseEnter (e: MouseEvent, i: number): void {\n      this.runDelay('open', () => {\n        this.hoverIndex = this.genHoverIndex(e, i)\n      })\n    },\n    onMouseLeave (): void {\n      this.runDelay('close', () => (this.hoverIndex = -1))\n    },\n    genItem (i: number): VNode | VNodeChildren | string {\n      const props = this.createProps(i)\n\n      if (this.$scopedSlots.item) return this.$scopedSlots.item(props)\n\n      const listeners: Record<string, Function> = {\n        click: props.click,\n      }\n\n      if (this.hover) {\n        listeners.mouseenter = (e: MouseEvent) => this.onMouseEnter(e, i)\n        listeners.mouseleave = this.onMouseLeave\n\n        if (this.halfIncrements) {\n          listeners.mousemove = (e: MouseEvent) => this.onMouseEnter(e, i)\n        }\n      }\n\n      return this.$createElement(VIcon, this.setTextColor(this.getColor(props), {\n        attrs: {\n          tabindex: -1,\n          'aria-label': this.$vuetify.lang.t(this.iconLabel, i + 1, Number(this.length)),\n        },\n        directives: this.directives,\n        props: this.iconProps,\n        on: listeners,\n      }), [this.getIconName(props)])\n    },\n  },\n\n  render (h): VNode {\n    const children = createRange(Number(this.length)).map(i => this.genItem(i))\n\n    return h('div', {\n      staticClass: 'v-rating',\n      class: {\n        'v-rating--readonly': this.readonly,\n        'v-rating--dense': this.dense,\n      },\n    }, children)\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":""}